/**
 * 堆
 * 
 * 特点：
 *    1. 完全二叉树
 *    2. 最大堆：父节点 >= 子节点
 *    2. 最小堆：父节点 <= 子节点
 * 
 * 逻辑结构 VS 物理结构
 *    逻辑结构是一个二叉树，物理结构是一个数组
 * 
 * 节点关系 (i 是第几个几点)：
 *    1. 创建一个堆：const heap = [-1, 10, 14, 25, 33, 81, 82, 99] // 忽略 0 节点
 *    2. parentNode = Math.floor(i / 2)
 *    3. leftNode = 2 * i
 *    4. rightNode = 2 * i + 1
 * 
 * 相比二叉搜索树：
 *    1. 查询比二叉搜索树慢
 *    2. 增删比二叉搜索树快，维持平衡更快
 *    3. 时间复杂度为 O(logn)，n 为节点数，logn 为树的高度
 */


